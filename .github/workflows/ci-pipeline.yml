name: CI Pipeline

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and run unit/integration tests
        run: mvn clean verify --batch-mode  # 'verify' includes integration tests

  code-quality:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Run code quality checks
        run: mvn spotbugs:check pmd:check checkstyle:check --batch-mode
  deploy-staging:
    needs: [ build-and-test, code-quality ]  # Only runs if previous jobs succeed
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'  # Runs on merge to main
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Build artifact
        run: mvn clean package -DskipTests --batch-mode  # Package without re-running tests
      - name: Deploy to staging
        run: |
          echo "Deploying to staging environment..."
          # Replace with your deployment command, e.g.:
          # aws s3 cp target/core-banking-api.jar s3://my-bucket/
          # ssh user@staging-server 'deploy-script.sh'